drop policy "vod_services admin users" on "public"."vod_services";

revoke delete on table "public"."anime_vod" from "anon";

revoke insert on table "public"."anime_vod" from "anon";

revoke references on table "public"."anime_vod" from "anon";

revoke select on table "public"."anime_vod" from "anon";

revoke trigger on table "public"."anime_vod" from "anon";

revoke truncate on table "public"."anime_vod" from "anon";

revoke update on table "public"."anime_vod" from "anon";

revoke delete on table "public"."anime_vod" from "authenticated";

revoke insert on table "public"."anime_vod" from "authenticated";

revoke references on table "public"."anime_vod" from "authenticated";

revoke select on table "public"."anime_vod" from "authenticated";

revoke trigger on table "public"."anime_vod" from "authenticated";

revoke truncate on table "public"."anime_vod" from "authenticated";

revoke update on table "public"."anime_vod" from "authenticated";

revoke delete on table "public"."anime_vod" from "service_role";

revoke insert on table "public"."anime_vod" from "service_role";

revoke references on table "public"."anime_vod" from "service_role";

revoke select on table "public"."anime_vod" from "service_role";

revoke trigger on table "public"."anime_vod" from "service_role";

revoke truncate on table "public"."anime_vod" from "service_role";

revoke update on table "public"."anime_vod" from "service_role";

revoke delete on table "public"."vod_services" from "anon";

revoke insert on table "public"."vod_services" from "anon";

revoke references on table "public"."vod_services" from "anon";

revoke select on table "public"."vod_services" from "anon";

revoke trigger on table "public"."vod_services" from "anon";

revoke truncate on table "public"."vod_services" from "anon";

revoke update on table "public"."vod_services" from "anon";

revoke delete on table "public"."vod_services" from "authenticated";

revoke insert on table "public"."vod_services" from "authenticated";

revoke references on table "public"."vod_services" from "authenticated";

revoke select on table "public"."vod_services" from "authenticated";

revoke trigger on table "public"."vod_services" from "authenticated";

revoke truncate on table "public"."vod_services" from "authenticated";

revoke update on table "public"."vod_services" from "authenticated";

revoke delete on table "public"."vod_services" from "service_role";

revoke insert on table "public"."vod_services" from "service_role";

revoke references on table "public"."vod_services" from "service_role";

revoke select on table "public"."vod_services" from "service_role";

revoke trigger on table "public"."vod_services" from "service_role";

revoke truncate on table "public"."vod_services" from "service_role";

revoke update on table "public"."vod_services" from "service_role";

alter table "public"."anime_vod" drop constraint "public_anime_vod_anime_id_fkey";

alter table "public"."anime_vod" drop constraint "public_anime_vod_vod_id_fkey";

alter table "public"."anime_vod" drop constraint "anime_vod_pkey";

alter table "public"."vod_services" drop constraint "vod_services_pkey";

drop index if exists "public"."anime_vod_pkey";

drop index if exists "public"."vod_services_pkey";

drop table "public"."anime_vod";

drop table "public"."vod_services";

create table "public"."animes_vods" (
    "anime_id" bigint not null,
    "vod_id" bigint not null,
    "created_at" timestamp with time zone default now()
);


alter table "public"."animes_vods" enable row level security;

create table "public"."vods" (
    "id" bigint generated by default as identity not null,
    "name" text,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone default now()
);


alter table "public"."vods" enable row level security;

CREATE UNIQUE INDEX animes_vods_pkey ON public.animes_vods USING btree (anime_id, vod_id);

CREATE UNIQUE INDEX vod_services_pkey ON public.vods USING btree (id);

alter table "public"."animes_vods" add constraint "animes_vods_pkey" PRIMARY KEY using index "animes_vods_pkey";

alter table "public"."vods" add constraint "vod_services_pkey" PRIMARY KEY using index "vod_services_pkey";

alter table "public"."animes_vods" add constraint "public_anime_vod_anime_id_fkey" FOREIGN KEY (anime_id) REFERENCES animes(id) not valid;

alter table "public"."animes_vods" validate constraint "public_anime_vod_anime_id_fkey";

alter table "public"."animes_vods" add constraint "public_anime_vod_vod_id_fkey" FOREIGN KEY (vod_id) REFERENCES vods(id) not valid;

alter table "public"."animes_vods" validate constraint "public_anime_vod_vod_id_fkey";

grant delete on table "public"."animes_vods" to "anon";

grant insert on table "public"."animes_vods" to "anon";

grant references on table "public"."animes_vods" to "anon";

grant select on table "public"."animes_vods" to "anon";

grant trigger on table "public"."animes_vods" to "anon";

grant truncate on table "public"."animes_vods" to "anon";

grant update on table "public"."animes_vods" to "anon";

grant delete on table "public"."animes_vods" to "authenticated";

grant insert on table "public"."animes_vods" to "authenticated";

grant references on table "public"."animes_vods" to "authenticated";

grant select on table "public"."animes_vods" to "authenticated";

grant trigger on table "public"."animes_vods" to "authenticated";

grant truncate on table "public"."animes_vods" to "authenticated";

grant update on table "public"."animes_vods" to "authenticated";

grant delete on table "public"."animes_vods" to "service_role";

grant insert on table "public"."animes_vods" to "service_role";

grant references on table "public"."animes_vods" to "service_role";

grant select on table "public"."animes_vods" to "service_role";

grant trigger on table "public"."animes_vods" to "service_role";

grant truncate on table "public"."animes_vods" to "service_role";

grant update on table "public"."animes_vods" to "service_role";

grant delete on table "public"."vods" to "anon";

grant insert on table "public"."vods" to "anon";

grant references on table "public"."vods" to "anon";

grant select on table "public"."vods" to "anon";

grant trigger on table "public"."vods" to "anon";

grant truncate on table "public"."vods" to "anon";

grant update on table "public"."vods" to "anon";

grant delete on table "public"."vods" to "authenticated";

grant insert on table "public"."vods" to "authenticated";

grant references on table "public"."vods" to "authenticated";

grant select on table "public"."vods" to "authenticated";

grant trigger on table "public"."vods" to "authenticated";

grant truncate on table "public"."vods" to "authenticated";

grant update on table "public"."vods" to "authenticated";

grant delete on table "public"."vods" to "service_role";

grant insert on table "public"."vods" to "service_role";

grant references on table "public"."vods" to "service_role";

grant select on table "public"."vods" to "service_role";

grant trigger on table "public"."vods" to "service_role";

grant truncate on table "public"."vods" to "service_role";

grant update on table "public"."vods" to "service_role";

create policy "Enable insert for auth user only"
on "public"."animes_vods"
as permissive
for all
to authenticated
using (((((auth.jwt() -> 'app_metadata'::text) ->> 'admin'::text))::boolean = true));


create policy "Enable read access for all users"
on "public"."animes_vods"
as permissive
for select
to public
using (true);


create policy "vod_services admin users"
on "public"."vods"
as permissive
for all
to authenticated
using (((((auth.jwt() -> 'app_metadata'::text) ->> 'admin'::text))::boolean = true));



